<head>
    <link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<div class="jumbotron text-center" style="background-color: transparent; color: #FFFFFF; margin-bottom: -50px">
    <h1 style="transform: translateY(-15px); font-family: 'Comfortaa'; font-size: 50px; text-shadow: 0 0 10px rgba(255, 255, 255, 0.9); color: #FFFFFF ">BrewQueue</h1>
</div>
<div class="jumbotron text-center" style="font-family: 'Comfortaa', sans-serif; background-color: transparent;">
    <p>
        <select id="locationDropdown" style="font-family: 'Comfortaa', sans-serif; background-color: transparent; text-align: center; border-color: #ffffff;">
            <option value="">Select a Location</option>
            @foreach (var location in ViewBag.Locations)
            {
                <option style="font-family: 'Comfortaa', sans-serif; background-color: transparent; color: #2f4d5a" value="@location">@location</option>
            }
        </select>
    </p>
    <div id="barsList"></div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var userLatitude = position.coords.latitude;
                var userLongitude = position.coords.longitude;

                fetch('/Home/FindNearestLocation?userLatitude=' + userLatitude + '&userLongitude=' + userLongitude)
                    .then(response => response.json())
                    .then(data => {
                        var nearestLocation = data.nearestLocation;
                        var locationDropdown = document.getElementById('locationDropdown');
                        for (var i = 0; i < locationDropdown.options.length; i++) {
                            if (locationDropdown.options[i].value === nearestLocation) {
                                locationDropdown.selectedIndex = i;
                                locationDropdown.dispatchEvent(new Event('change'));
                                break;
                            }
                        }
                    });
            }, function () {
                console.error('Geolocation is not supported by this browser or user has denied the permission.');
            });
        }
    });


    document.getElementById('locationDropdown').addEventListener('change', function () {
        var selectedLocation = this.value;
        fetch('/Home/GetBarsByLocation?location=' + encodeURIComponent(selectedLocation))
        .then(response => response.json())
        .then(bars => {
            var barsList = document.getElementById('barsList');
            barsList.innerHTML = ''; // Clear existing buttons
            bars.forEach(bar => {
                var button = document.createElement('button');
                button.className = 'barButton';

                var backgroundImageDiv = document.createElement('div');
                backgroundImageDiv.className = 'buttonBackground';
                backgroundImageDiv.style.backgroundImage = `url('${bar.BannerPicturePath}')`;

                var img = document.createElement('img');
                img.src = bar.ProfilePicturePath;
                img.className = 'barProfilePicture';

                var textSpan = document.createElement('span');
                textSpan.innerText = bar.BarName;
                textSpan.className = 'barButtonText';

                button.appendChild(backgroundImageDiv);
                button.appendChild(img);
                button.appendChild(textSpan);

                button.addEventListener('click', function () {
                    window.location.href = '@Url.Action("Index", "Queue")' + '?id=' + bar.Id;
                });
                barsList.appendChild(button);
            });
        });
    });    
</script>

<style>  

    .barButton {
        display: flex; /* Use flexbox for layout */
        align-items: center; /* Align items vertically */
        justify-content: flex-start; /* Align content to the left */
        width: 100%;
        padding: 10px;
        font-size: 30px;
        color: white;
        background-color: #FFFFFF;
        border: 4px solid #FFFFFF;
        border-radius: 75px;
        margin-bottom: 10px;
        position: relative; /* Needed for background positioning */
        overflow: hidden; /* Ensure contents stay within the button */
    }

    .buttonBackground {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center;
        opacity: 0.4; /* 40% opacity */
        z-index: 1; /* Below the content */
    }

    .barProfilePicture {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        margin-right: 10px; /* Space between image and text */
        z-index: 2; /* Above the background */
    }

    .barButtonText {
        text-align: left;
        color: #000000;
        font-family: 'Comfortaa';
        text-shadow: 0 0 15px rgba(255, 255, 255); /* Increased contrast and opacity */
        z-index: 2; /* Ensure text is above the background */
    }

    .barButton:hover {
        background-color: #2f4d5a;
    }
</style>

